name: Deploy via ArgoCD

run-name: ${{ github.actor }} is deploying via ArgoCD

on:
  workflow_dispatch:
    inputs:
      stage:
        description: 'Select deployment stage'
        required: true
        default: 'app'
        type: choice
        options:
          - infra
          - app
          - both

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.stage == 'infra' || github.event.inputs.stage == 'both' }}
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
      
      - name: Install gettext for envsubst
        run: sudo apt-get install -y gettext-base

      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Render Loki template with envsubst
        env:
          EMAIL_GMAIL: ${{ secrets.EMAIL_GMAIL }}
          APP_PASS: ${{ secrets.APP_PASS }}
          SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
          ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
        run: |
          envsubst < app/helm-apps/loki-stack/values-template.yml > app/helm-apps/loki-stack/values.yml

      - name: Create Projects
        run: |
          kubectl apply -f app/argocd/app-project.yml -n argocd
          kubectl apply -f app/argocd/infra-project.yml -n argocd

      - name: Deploy Infra app
        run: |
          kubectl apply -f app/argocd/infra-helm.yml -n argocd

  deploy-app-project:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.stage == 'app' || github.event.inputs.stage == 'both' }}
    needs: deploy-infra

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Deploy Web app
        run: |
          kubectl apply -f app/argocd/web-app.yml -n argocd