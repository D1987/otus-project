# LOKI
loki:
  auth_enabled: false
  image:    
    tag: 2.9.3 

  nodeSelector:
    role: infra
  tolerations:
    - key: "node-role"
      operator: "Equal"
      value: "infra"
      effect: "NoSchedule"
  commonConfig:
    replication_factor: 1

  schemaConfig:
    configs:
      - from: "2025-08-12"
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  storage_config:
    aws:
      region: ru-central1
      bucketnames: loki-logs-s3-project
      s3forcepathstyle: false
  pattern_ingester:
      enabled: true
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
    retention_period: 10h # 28 days retention

  storage:
    type: s3
    bucketNames:
        chunks: loki-logs
        ruler: loki-logs
        admin: loki-log
    s3:
      # AWS endpoint URL
      endpoint: storage.yandexcloud.net
      # AWS region where the S3 bucket is located
      region: ru-central1
      # AWS secret access key
      secretAccessKey: ${SECRET_ACCESS_KEY}
      # AWS access key ID
      accessKeyId: ${ACCESS_KEY_ID}
      # AWS signature version (e.g., v2 or v4)
      signatureVersion: v4
      # Forces the path style for S3 (true/false)
      s3ForcePathStyle: false
      # Allows insecure (HTTP) connections (true/false)
      insecure: false
      # HTTP configuration settings
      http_config: {}

deploymentMode: SingleBinary
singleBinary:
  replicas: 1
  # resources:
  #   limits:
  #     cpu: 3
  #     memory: 4Gi
  #   requests:
  #     cpu: 2
  #     memory: 2Gi
  extraEnv:
    # Keep a little bit lower than memory limits
    - name: GOMEMLIMIT
      value: 3750MiB

chunkCache:
  enabled: false
  allocatedMemory: 10MB

# Disable minio storage
minio:
  enabled: false

# Zero out replica counts of other deployment modes
backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

ingester:
  replicas: 0
querier:
  replicas: 0
  max_concurrent: 2
queryFrontend:
  replicas: 0
queryScheduler:
  replicas: 0
distributor:
  replicas: 0
compactor:
  replicas: 0
indexGateway:
  replicas: 0
bloomCompactor:
  replicas: 0
bloomGateway:
  replicas: 0

gateway:
  nodeSelector:
    role: infra
  tolerations:
    - key: "node-role"
      operator: "Equal"
      value: "infra"
      effect: "NoSchedule"

lokiCanary:
  nodeSelector:
    role: infra
  tolerations:
    - key: "node-role"
      operator: "Equal"
      value: "infra"
      effect: "NoSchedule"

chunksCache:
  nodeSelector:
    role: infra
  tolerations:
    - key: "node-role"
      operator: "Equal"
      value: "infra"
      effect: "NoSchedule"

resultsCache:
  nodeSelector:
    role: infra
  tolerations:
    - key: "node-role"
      operator: "Equal"
      value: "infra"
      effect: "NoSchedule"

# PROMTAIL
promtail:
  enabled: true
  config:
    logLevel: info
    serverPort: 3101
    clients:
      - url: http://{{ .Release.Name }}:3100/loki/api/v1/push
  tolerations:
  - key: "node-role"
    operator: "Equal"
    value: "infra"
    effect: "NoSchedule"
  nodeSelector: {}

# GRAFANA
grafana:
  enabled: true
  sidecar:
    datasources:
      label: ""
      labelValue: ""
      enabled: true
      maxLines: 1000
    dashboards:
      enabled: true
      label: grafana_dashboard
      folderAnnotation: grafana_folder
      searchNamespace: loki
    alerts:
      enabled: true
      label: grafana_alert
      folderAnnotation: grafana_folder
      searchNamespace: loki
  image:
    tag: 10.3.3
  grafana.ini:
    smtp:
      enabled: true
      host: smtp.gmail.com:587
      user: ${EMAIL_GMAIL}
      password: ${APP_PASS}
      from_address: ${EMAIL_GMAIL}
      from_name: Grafana
      skip_verify: false
  
  nodeSelector:
    role: infra
  tolerations:
    - key: "node-role"
      operator: "Equal"
      value: "infra"
      effect: "NoSchedule"

# PROMETHEUS
prometheus:
  enabled: true
  isDefault: false
  url: http://{{ include "prometheus.fullname" .}}:{{ .Values.prometheus.server.service.servicePort }}{{ .Values.prometheus.server.prefixURL }}
  datasource:
    jsonData: "{}"
  
  nodeSelector:
    role: infra
  tolerations:
    - key: "node-role"
      operator: "Equal"
      value: "infra"
      effect: "NoSchedule"

# TEST-POD
test_pod:
  enabled: false
  image: bats/bats:1.8.2
  pullPolicy: IfNotPresent